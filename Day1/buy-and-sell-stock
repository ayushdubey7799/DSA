

class Solution {
    public int maxProfit(int[] arr) {
        int n = arr.length;
        int[] leftMin = new int[n];
        
        leftMin[0] = arr[0];
        for (int i = 1; i < n; i++) {
            leftMin[i] = Math.min(leftMin[i - 1], arr[i]);
        }

        int res = 0;
        for (int i = 0; i < n; i++) {
            res = Math.max(res, arr[i] - leftMin[i]);
        }
        
        return res;
    }
}


=====================================================
Optimal

class Solution {
    public int maxProfit(int[] arr) {
        int min = arr[0];
        int res = 0;
        int n = arr.length;
        for(int i = 1;i<n;i++){
          min = Math.min(min,arr[i]);
          res = Math.max(res,arr[i] - min);
        }
        return res;
    }
}

