

class Solution {
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] vis = new boolean[V];
        boolean[] pathVis = new boolean[V];
        
        for(int i = 0;i<V;i++){
            if(!vis[i]){
                if(dfs(V,adj,vis,pathVis,i))return true;
            }
        }
        
        return false;

    }
    
    boolean dfs(int V, ArrayList<ArrayList<Integer>> adj,boolean[] vis,boolean[] pathVis,int curr){
        vis[curr] = true;
        pathVis[curr] = true;
        
        for(int i = 0;i<adj.get(curr).size();i++){
            int newCurr = adj.get(curr).get(i);

            if(pathVis[newCurr]){
                return true;
            }
            else if(!vis[newCurr] && dfs(V,adj,vis,pathVis,newCurr)){
                return true;
            }
        }
        pathVis[curr] = false;
        return false;
    }
}



