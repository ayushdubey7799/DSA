
class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        int[] inFrequency = new int[V];
        int[] res = new int[V];
        int k = 0;
        Queue<Integer> q = new ArrayDeque();
        
        for(int i = 0;i<V;i++){
            for(int j = 0;j<adj.get(i).size();j++){
                int curr = adj.get(i).get(j);
                inFrequency[curr]++;
            }
        }
        
        for(int i = 0;i<V;i++){
            if(inFrequency[i] == 0){
                q.offer(i);
                res[k++]=i;
            }
        }
        
        while(!q.isEmpty()){
            int curr = q.poll();
            for(int i = 0;i<adj.get(curr).size();i++){
                int x = adj.get(curr).get(i);
                    inFrequency[x]--;
                    if(inFrequency[x]==0){
                        q.offer(x);
                        res[k++] = x;
                    }
                
                
            }
        }
        
        
        return res;
       
    }
    
    
}
